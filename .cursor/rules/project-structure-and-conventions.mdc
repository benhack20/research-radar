---
alwaysApply: false
---
# 项目开发规范

- ***开发规范***

  - *前后端均需详细注释、接口文档（Swagger/OpenAPI、Storybook等）。*
  - *代码风格统一，提交前自动格式化与静态检查。*
  - *采用分支开发、代码评审、自动化测试流程。*

- ***测试策略***

  - *前端：Jest + React Testing Library，覆盖组件、页面、接口交互。*
  - *后端：pytest + httpx，覆盖API、业务逻辑、异常分支。*
  - *集成测试：端到端自动化测试（如Cypress、Playwright）。*
  - *性能测试：接口QPS、响应时延、并发压力测试。*
  - *安全测试：接口权限、Token泄露、SQL注入、XSS等。*

- ***CI/CD流程***

  - *代码提交自动触发单元测试、构建、镜像打包。*
  - *通过后自动部署到测试/生产环境。*
  - *失败自动告警，日志可追溯。*

- ***数据库测试***

  - *所有数据同步、刷新、冲突处理需有单元与集成测试覆盖。*


# TDD开发流程

1. **需求分析**：明确每个功能点的业务需求和预期行为。
2. **测试用例设计**：在开发前，先为该功能编写详细的测试用例（包括正常、异常、边界、权限等场景）。
3. **编写测试代码**：实现测试用例，确保其能独立运行。
4. **实现业务代码**：仅在测试用例未通过时，开始编写/修改业务代码。
5. **运行测试**：持续运行测试，直至所有用例通过。
6. **重构与优化**：在保证测试全部通过的前提下，重构业务代码。
7. **提交与集成**：所有代码合并前，必须通过CI自动化测试。